#####################################################################################
# Expansion of Intermittent Renewables: Strategies, pass-through costs, and welfare distribution
# Processing raw data, descriptive tables, graphs of data, and building panel data for Stata and python
# Period 02.01.2017 - 30.09.2018
# Author : GC
# Created: 25.09.19
# Last date updated: 30.08.2021
#####################################################################################
#Input files:
#1. I.xlsx                - Electricity production per plant 
#2. chp.xlsx              - chp production and probabilities
#3. namemchp.xlsx         - Plant capacities, names, and technologies
#4. firmpy.xlsx           - firms and plants match
#5. resdm5.xlsx           - Electricity production per technology, demand, renewanbles production
#6. inst.xlsx             - Day-ahead hourly electricity prices and daily fuel prices
#7. loadfa.xlsx           - load factors as actual prod in hour / max prod in the whole period of analysis
#8. Marginalcosts.xlsx    - fuel costs and Co2 costs
#9. temper.xlsx           - temperatures per plant location
#10. solar.xlsx           - solar radiation plant location
#11. wind.xlsx            - wind speed plant location
#12. ramp.xlsx            - Ramping costs

#####################################################################################
#Output files:
#1. sharesl.xlsx       - Total shares per market T
#2. i1rv.cvs           - Cvs data to read in python
#3. T1_m               - Additional descriptive data for Table 1 of the paper

#####################################################################################

#Required packages
if(FALSE){ 
  install.packages('tidyverse')
  library('tidyverse')
  install.packages('tibbletime')
  library(tibbletime)
  library(lubridate)
  install.packages("reshape2")
  library("reshape2")
  install.packages("reshape")
  library("reshape")
  install.packages("data.table")
  library("data.table")
  install.packages('dummies')
  library('dummies')
  install.packages("caret")
  library("caret")
  install.packages("corrplot")
  library("corrplot")
  install.packages('writexl')
  library('writexl')
  install.packages("psych")
  library("psych")
  install.packages("gridExtra")
  library("gridExtra")
  install.packages('xts')
  library('xts')
  install.packages("pastecs")
  library("pastecs")
}


remove(list = ls())

#DATA CONSTRUCTION FOR PYTHON PYPBLP - START
#############################################################################################
setwd("C:\\Users\\glori\\Documents\\Papers_202005\\1_Paper\\Replication\\R_paneldata\\BLP") 
ener <- data.frame(read_excel("I.xlsx", col_types = c("text", 
                                                      "numeric", "numeric", "numeric", "numeric", 
                                                      "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                      "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                      "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                      "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                      "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                      "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                      "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                      "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                      "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                      "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                      "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                      "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                      "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                      "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                      "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                      "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                      "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                      "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                      "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                      "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                      "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                      "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                      "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                      "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                      "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                      "numeric", "numeric"  
                                                      )))




ener1 <- ener[-c(1), c(3:120)]

setwd("C:\\Users\\glori\\Documents\\Papers_202005\\1_Paper\\Replication\\R_paneldata") 
chp <- data.frame(read_excel("chp.xlsx", col_types = c("text", 
                                            "numeric", "numeric"
)))

gaschp <- chp[-c(1:3),-c(1:2)]
ener2 <- cbind.data.frame(ener1, gaschp)

ener3 <- data.frame(stack(ener2))
ener4 <- ener3[, c(2,1)] 
time <- rep(c(1:15288),119)
ener5 <- cbind.data.frame(ener4, time)
ener5$ix <- with(ener4, paste(ind, time))
ener5 <- ener5[,-c(1)]

##renaming
colnames(ener5) <- c( "ener", "time", "ix")

rm(ener1, ener3, ener4, gaschp)


######################################
#adding probabilities chp
prob2 <- data.frame(read_excel("chp.xlsx", sheet="probchp"))
prob2 <- prob2[,-c(1)]

setwd("C:\\Users\\glori\\Documents\\Papers_202005\\1_Paper\\Replication\\R_paneldata") 
namemc <- data.frame(read_excel("namemchp.xlsx", col_types = c("text", 
                                                    "numeric", "numeric", "numeric", "numeric", 
                                                    "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                    "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                    "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                    "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                    "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                    "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                    "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                    "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                    "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                    "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                    "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                    "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                    "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                    "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                    "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                    "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                    "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                    "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                    "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                    "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                    "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                    "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                    "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                    "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                    "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                    "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                    "numeric", "numeric", "numeric", "numeric", "numeric",
                                                    "numeric", "numeric")))

pr <- namemc[-c(1:3),-c(1:2, 121:142)]
pr[c(2:15289), c(1:118)] <- 1

cchp <- which( pr[1,] == "53") #coal index
gchp <- which( pr[1,] == "55") #gas index         

pr <- pr[-c(1),]
pr[,cchp] <- prob2$coalchp
pr[,gchp] <- prob2$gaschp

pr$gaschp <- 1

prm1 <- stack(pr)
prm2 <- prm1[, c(2,1)]
prm3 <- cbind.data.frame(prm2, time)
prm3$ix <- with(prm3, paste(ind, time))
prm3 <- prm3[,-c(1,3)]
colnames(prm3) <- c( "probchp", "ix")

py1a <- merge(ener5, prm3, by="ix")

rm(pr,prm1, ener, prm2, prob2, cchp, gchp)

set.seed(10)
Fun <- function(k){as.data.frame(rbinom(length(py1a$time), 1, prob = py1a[[4]]))}
a <- lapply(1:10, Fun)

b = list()
for(n in 1:10){ 
  b[[n]] <- a[[n]][1]
}
b = do.call(cbind, b)

c <- as.data.frame(rowMeans(b))
colnames(c) <- c("probr")

py2a <- cbind.data.frame(py1a, c)

#chp proportions running
py2b <- py2a[,-c(5:6)]
py2b$enerchp <- py2b$ener*py2b$probchp
py2b$plant <- gsub('[[:space:]].*', '', py2b$ix)

py3b <- py2b[, c(3,5,6)]
py4b <- py3b[order(py3b$time),] 
id <- rep(c(1:119),15288)
py5b <- cbind.data.frame(id, py4b)
py6b <- acast(py5b, time~plant, value.var = "enerchp")
py7b <- data.frame(py6b)

rm(py1a, py2a, py2b,  py3b, py4b,  py5b,  py6b, n, id, Fun,a,b,c)


m <- c(1:1819272)
stamp <- rep(c(namemc[-c(1:4),c(1)]),119)
id<- rep(c(1:119), each=15288)
hour <- rep(c(24, 1:23), 75803)
dayc <- rep(c("Mo", "Tu", "W", "Th", "Fr", "Sa", "Su"),each =24)
day <- rep(c(dayc), 10829)
month <- as.numeric(substring(stamp,6,7))
year <- as.numeric(substring(stamp,1,4))
rm(dayc)

#building market_ids
market_ids <- paste('T',str_pad(time, 5, pad = "0"))

py1 <- cbind.data.frame(m,id,market_ids, time, hour, day, month, year)

#####################################
#firms to built product_ids
setwd("C:\\Users\\glori\\Documents\\Papers_202005\\1_Paper\\Replication\\R_paneldata\\BLP") 
firm <- data.frame(read_excel("firmpy.xlsx"))
firm1 <- firm[, -c(1,3)]

py1a <- merge.data.frame(py1, firm1, by="id")
product_ids <- paste('F',str_pad(py1a$firm_ids, 2, pad = "0"), 'P', str_pad(py1$id, 3, pad = "0"))

py2 <- cbind.data.frame(py1, product_ids)
py3 <- merge(py2, firm1, by="id")

py4 <- py3%>%select(-1,1)
setnames(py4, "id", "plant_ids") 

rm(firm1)
rm(day, hour, market_ids, product_ids, month, stamp, year, time, py1, py2, py1a, prm3, ener2,ener5, id)

#####################################
#adding shares
MW <- py7b
MW$sump <- rowSums(MW)
setwd("C:\\Users\\glori\\Documents\\Papers_202005\\1_Paper\\Replication\\R_paneldata") 
dem <- read_xlsx("resdm5.xlsx")
MW$demand <- dem$demand
MW$out <- MW$demand - MW$sump
sh <- round(MW[1:15288,1:119]/MW[,121],6)
sh1 <- sh[names(ener2)]
sh2 <- data.frame(stack(sh1))
sh2a <- sh2[,c(1)]
sh3 <- cbind.data.frame(sh2a,m)
colnames(sh3) <- c('shares', 'm')
py5 <- merge(py4, sh3, by="m")
rm(sh, sh1, sh2, sh2a, sh3)
rm(MW, py3, py7b)

#####################################
#add prices from first stage stata
fs <- data.frame(read_excel("inst.xlsx"))
py5$prices <-  fs[,"price"]

#####################################
#adding loadf
setwd("C:\\Users\\glori\\Documents\\Papers_202005\\1_Paper\\Replication\\R_paneldata\\BLP") 
lf <- data.frame(read_excel("loadfa.xlsx"))
chp1 <- chp[-c(1:3),]
chp1$chplf <- chp1$gaschp/max(chp1$gaschp)
lf2<- lf[-c(1),-c(1:2)]
lf2$gaschp <- chp1$chplf
lf3<- data.frame(stack(lf2))
lf4<- lf3[,-c(2)]
lf5 <- cbind.data.frame(lf4,m)
colnames(lf5) <- c('loadf', 'm')
py6 <- merge(py5, lf5, by="m")
rm(lf, lf2, lf3, lf4, lf5, chp1, chp)

#####################################
#add fuel costs from inst for random logit
setwd("C:\\Users\\glori\\Documents\\Papers_202005\\1_Paper\\Replication\\R_paneldata") 
fc <- data.frame(read_excel("Marginalcosts.xlsm", sheet="Tab1"))
fc1 <- fc[-c(1:2),-c(1:2, 121:130)]
fc2 <- data.frame(stack(fc1))
fc3 <- fc2[,-c(2)]
fc4 <- cbind.data.frame(fc3,m)
colnames(fc4) <- c('fcost', 'm')

py7 <- merge(py6, fc4, by="m")
rm(fc, fc1, fc2, fc3, fc4)

#####################################
#add CO2 costs from inst for random logit
fco <- data.frame(read_excel("Marginalcosts.xlsm", sheet="Tab2"))
fco1 <- fco[-c(1:2),-c(1:2, 121:130)]
fco2 <- data.frame(stack(fco1))
fco3 <- fco2[,-c(2)]
fco4 <- cbind.data.frame(fco3,m)
colnames(fco4) <- c('fcoa', 'm')
py8 <- merge(py7, fco4, by="m")
rm(fco, fco1, fco2, fco3, fco4, py6)

#####################################
#adding temp
temper <- data.frame(read_excel("temper.xlsx"))
temper2<- temper[-c(1:2),-c(1:2)]
temper3<- data.frame(stack(temper2))
temper4<- temper3[,-c(2)]
temper5 <- cbind.data.frame(temper4,m)
colnames(temper5) <- c('demand_instruments0', 'm')
py9 <- merge(py8, temper5, by="m")
rm(temper2, temper3, temper4, temper5,temper, py7)

#####################################
#adding solar
solar <- data.frame(read_excel("solar.xlsx"))
solar2<- solar[-c(1:2),-c(1:2, 121:130)]
solar3<- data.frame(stack(solar2))
solar4<- solar3[,-c(2)]
solar5 <- cbind.data.frame(solar4,m)
colnames(solar5) <- c('solar', 'm')
py91 <- merge(py9, solar5, by="m")
rm(solar2, solar3, solar4, solar5,solar)

#####################################
#adding wind
wind <- data.frame(read_excel("wind.xlsx"))
wind2<- wind[-c(1:2),-c(1:2, 121:130)]
wind3<- data.frame(stack(wind2))
wind4<- wind3[,-c(2)]
wind5 <- cbind.data.frame(wind4,m)
colnames(wind5) <- c('wind', 'm')
py92 <- merge(py91, wind5, by="m")
rm(wind2, wind3, wind4, wind5,wind)

#####################################
#Adding renewables
ren <- rep(dem$ren,119)
ren2 <- cbind.data.frame(m, ren)
py93 <- merge(py92, ren2, by="m")
rm(ren, ren2)

#####################################
#Adding demand
demand <- rep(dem$demand,119)
dm2 <- cbind.data.frame(m, demand)
py94 <- merge(py93, dm2, by="m")
rm(demand, dm2, py91, py92)


######################################
#technologies
cate <- namemc[c(1), c(3:120)]
cate$gaschp <- 17
cate1 <- stack(cate)
colnames(cate1) <- c("nesting_ids", "plant") 
tech <- c("biom","wasser",	"windon", "windoff",	"solar",	"serne",	"kerne",	"braunk",	"steink",	"gasoc",	"pump", "oil", "skonv" ,"gasst", "gascc" , "oiloc", "gaschp")
techc <- c(1,       2,         4,        3,         5,        12,        7,        8 ,       9 ,      10,    11,     6     , 13      , 14,      15     , 16  ,    17  )
techa <- data.frame(tech, techc)
colnames(techa) <- c("tech", "nesting_ids")
techb <- merge(cate1, techa, by="nesting_ids")
firm3 <-firm[,-c(3:4)]
techc <- merge(firm3, techb, by="plant")
colnames(techc)[2] <- "plant_ids"

py10 <- merge(py94, techc, by="plant_ids")

rm(cate, cate1, techa, techb, techc, firm3,tech, m)


#####################################
#fuel prices
attach(py10)
py10$supply_instruments0[tech=="steink"] <- fs$coal
py10$supply_instruments0[tech=="gasoc"] <- fs$coal
py10$supply_instruments0[tech=="gasst"] <- fs$coal
py10$supply_instruments0[tech=="gascc"] <- fs$coal
py10$supply_instruments0[tech=="oil"]   <- fs$coal
py10$supply_instruments0[tech=="skonv"] <- fs$coal
py10$supply_instruments0[tech=="oiloc"] <- fs$coal
detach(py10)
py10$supply_instruments0[is.na(py10$supply_instruments0)] <- 0


attach(py10)
py10$supply_instruments1[tech=="steink"] <- fs$gas
py10$supply_instruments1[tech=="gasoc"] <- fs$gas
py10$supply_instruments1[tech=="gasst"] <- fs$gas
py10$supply_instruments1[tech=="gascc"] <- fs$gas
py10$supply_instruments1[tech=="oil"]   <- fs$gas
py10$supply_instruments1[tech=="skonv"] <- fs$gas
py10$supply_instruments1[tech=="oiloc"] <- fs$gas
detach(py10)
py10$supply_instruments1[is.na(py10$supply_instruments1)] <- 0


attach(py10)
py10$supply_instruments2[tech=="steink"] <- fs$coa
py10$supply_instruments2[tech=="gasoc"] <- fs$coa
py10$supply_instruments2[tech=="gasst"] <- fs$coa
py10$supply_instruments2[tech=="gascc"] <- fs$coa
py10$supply_instruments2[tech=="oil"]   <- fs$coa
py10$supply_instruments2[tech=="skonv"] <- fs$coa
py10$supply_instruments2[tech=="oiloc"] <- fs$coa
detach(py10)
py10$supply_instruments2[is.na(py10$supply_instruments2)] <- 0

######################################
#ramping costs
ramp <- data.frame(read_excel("ramp.xlsx", col_types = c("text", 
                                                           "numeric", "numeric", "numeric", "numeric", 
                                                           "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                           "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                           "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                           "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                           "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                           "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                           "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                           "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                           "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                           "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                           "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                           "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                           "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                           "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                           "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                           "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                           "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                           "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                           "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                           "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                           "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                           "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                           "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                           "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                           "numeric", "numeric", "numeric", "numeric", "numeric", 
                                                           "numeric"
                                                           
                                                           
)))


ramp1 <- ramp[-c(1:2), -c(1:2, 121:130)]
ramp2 <- data.frame(stack(ramp1))
ramp3 <- ramp2[, c(2,1)]
m <- c(1:1819272)
ramp4 <- cbind.data.frame(ramp3, m)
ramp4 <- ramp4[,-c(1)]
rm(ramp1, ramp2,ramp3)
colnames(ramp4) <- c( "rampc", "m")
py11 <- merge(py10, ramp4, by="m")
py12 <- py11%>%select(-plant_ids,plant_ids)

#cleaning the data
ch <- sapply(py12, function(x) sum(is.na(x)))
ch1 <- py12[!complete.cases(py12), ]
ch2 <- unique(ch1$time)
pyclean <- py12
pyclean = filter(pyclean, !(time %in% ch2))

summary(pyclean) #1556877

#################################################################################
#VERIFICATIONS --
#N=1556877
#taking out shares close equal to 0 or 1: N=1091274
#loss= 1- 951304/1556877
vf <- with(pyclean, subset(pyclean, shares>0 & shares<0.99))

#taking out periods where the the total sum of shares is 1:
Summary = vf %>%
  group_by(time = floor(time)) %>%
  summarise(shares = sum(shares))

#N= 1 market that sum higher than  0.99 in shares
check <- with(Summary, subset(Summary,  shares>=0.99))

#N= 0 markets that sum 0 in shares
check2 <- with(Summary, subset(Summary,  shares<=0))
b <- c(check$time)
d <- c(check2$time)

#final total N= 951223, loss = 1 - 951223/1556877, total final loss of 0.389 data
vf1 <- vf[!vf$time %in% b, ]
vf2v <- vf1[!vf1$time %in% d, ]


Summary2 = vf2v %>%
  group_by(time = floor(time)) %>%
  summarise(shares = sum(shares))

setwd("C:\\Users\\glori\\Documents\\Papers_202005\\1_Paper\\Replication\\R_paneldata\\BLP") 
write_xlsx(Summary2, "sharesl.xlsx") #shares that we are using in T markets

check3 <- with(Summary2, subset(Summary2, shares>=0.99)) #zero 
rm(check, check2, Summary, check3)

#cheecking NAs in final dataset vf2
sum(apply(vf2v, 1, anyNA)) #zero 

rm(Summary2, py11, py12, py10, ramp, ramp4,pyclean, vf, vf1)
rm(ch1, firm, fs, py4, py5, py8, py9, py93, py94, ch, ch2, b,d,m)


#################################################################################
#EXPORT TO CVS USE IN PYTHON

attach(vf2v)
vf2v$period[4<=month & month<=9] <- "Summer"
vf2v$period[1<=month & month<=3] <- "Winter"
vf2v$period[10<=month & month<=12] <- "Winter"
detach(vf2v)


attach(vf2v)
vf2v$block[6<=hour & hour<=9] <- "peak1"
vf2v$block[13<=hour & hour<=16] <- "peak2"
vf2v$block[20<=hour & hour<=21] <- "off"
vf2v$block[10<=hour & hour<=12] <- "peak1"
vf2v$block[17<=hour & hour<=19] <- "peak2"
vf2v$block[1<=hour & hour<=5] <- "off"
vf2v$block[22<=hour & hour<=24] <- "off"
detach(vf2v)

#vf2v <- cbind(vf2v, dummy(vf2v$block, sep = "_"))

attach(vf2v)
vf2v$week[day=="Mo" | day=="Tu" | day=="W" | day=="Th" | day=="Fr" ] <- "work"
vf2v$week[day=="Sa" | day=="Su" ] <- "end"
detach(vf2v)

#vf2v <- vf2v[,-c(19:20)]
write.csv(vf2v, file="i1rv.cvs")

summary(vf2v)

#################################################################################
#Additional data for Table 1
setwd("C:\\Users\\glori\\Documents\\Papers_202005\\1_Paper\\Replication\\Tables") 
T1_m <- stat.desc(vf2v) 
T1_m$desc <- rownames(T1_m)
T1_m <- T1_m[,c(ncol(T1_m),1:(ncol(T1_m)-1))]

write_xlsx(T1_m, "T1_m.xlsx")

#############################################################################################
#DATA CONSTRUCTION FOR PYTHON PYPBLP - END


